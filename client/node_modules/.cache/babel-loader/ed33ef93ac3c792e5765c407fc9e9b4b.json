{"ast":null,"code":"import _slicedToArray from \"/Users/chentianming/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chentianming/Desktop/contact-keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';\nimport authReducer from './authReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  }; // useReducer参数顺序不能颠倒\n  // p1: 所使用的reducer  p2: 初始值\n  // 第一个返回state(其实就是p2的值), 第二个返回dispatch用以更新state的数列（一个分发函数指向Reducer, 默认第一个参数为state）\n\n  const _useReducer = useReducer(authReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Load User\n\n\n  const loadUser = () => console.log('loaduser'); // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const login = () => console.log('login'); // Logout\n\n\n  const logout = () => console.log('logout'); // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return (// state为component提供context, component调用context（object value）里的properties\n    React.createElement(AuthContext.Provider, {\n      value: {\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, props.children)\n  );\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/chentianming/Desktop/contact-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","console","log","register","formData","config","headers","res","post","type","payload","data","err","response","msg","login","logout","clearErrors","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,YARF,QASO,UATP;;AAWA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,IAAAA,eAAe,EAAE,IAFE;AAGnBC,IAAAA,OAAO,EAAE,IAHU;AAInBC,IAAAA,IAAI,EAAE,IAJa;AAKnBC,IAAAA,KAAK,EAAE;AALY,GAArB,CADyB,CASzB;AACA;AACA;;AAXyB,sBAYCrB,UAAU,CAACG,WAAD,EAAcW,YAAd,CAZX;AAAA;AAAA,QAYlBQ,KAZkB;AAAA,QAYXC,QAZW,oBAczB;;;AACA,QAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAvB,CAfyB,CAiBzB;;;AACA,QAAMC,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AACjC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAMA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM9B,KAAK,CAAC+B,IAAN,CAAW,YAAX,EAAyBJ,QAAzB,EAAmCC,MAAnC,CAAlB;AAEAN,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAE7B,gBADC;AAEP8B,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,OAAD,CAAR;AAID,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZb,MAAAA,QAAQ,CAAC;AACPU,QAAAA,IAAI,EAAE5B,aADC;AAEP6B,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBG;AAFpB,OAAD,CAAR;AAID;AACF,GApBD,CAlByB,CAwCzB;;;AACA,QAAMC,KAAK,GAAG,MAAMd,OAAO,CAACC,GAAR,CAAY,OAAZ,CAApB,CAzCyB,CA2CzB;;;AACA,QAAMc,MAAM,GAAG,MAAMf,OAAO,CAACC,GAAR,CAAY,QAAZ,CAArB,CA5CyB,CA8CzB;;;AACA,QAAMe,WAAW,GAAG,MAAMlB,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAEtB;AAAR,GAAD,CAAlC;;AAEA,SACE;AACA,wBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLI,QAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELG,QAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFlB;AAGLC,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAHV;AAILC,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAJP;AAKLC,QAAAA,KAAK,EAAEC,KAAK,CAACD,KALR;AAMLM,QAAAA,QANK;AAOLH,QAAAA,QAPK;AAQLe,QAAAA,KARK;AASLC,QAAAA,MATK;AAULC,QAAAA;AAVK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcG5B,KAAK,CAAC6B,QAdT;AAFF;AAmBD,CApED;;AAsEA,eAAe9B,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './AuthContext';\nimport authReducer from './authReducer';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n\n  // useReducer参数顺序不能颠倒\n  // p1: 所使用的reducer  p2: 初始值\n  // 第一个返回state(其实就是p2的值), 第二个返回dispatch用以更新state的数列（一个分发函数指向Reducer, 默认第一个参数为state）\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Load User\n  const loadUser = () => console.log('loaduser');\n\n  // Register User\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  // Login User\n  const login = () => console.log('login');\n\n  // Logout\n  const logout = () => console.log('logout');\n\n  // Clear Errors\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n  return (\n    // state为component提供context, component调用context（object value）里的properties\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}