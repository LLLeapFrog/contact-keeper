{"ast":null,"code":"var _jsxFileName = \"/Users/chentianming/Desktop/contact-keeper/client/src/components/contacts/ContactFilter.js\";\nimport React, { useContext, useRef, useEffect } from 'react';\nimport ContactContext from '../../context/contact/ContactContext';\n\nconst ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n  const filterContacts = contactContext.filterContacts,\n        clearFilter = contactContext.clearFilter,\n        filtered = contactContext.filtered; // ⬇以下内容完全没有必要，可以用setState来代替⬇\n\n  const text = useRef(''); // to catch the current element in the real DOM\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n\n  const onChange = e => {\n    if (text.current.value !== '') {\n      // value或其他attribute即使没有定义，也会自动生成\n      filterContacts(e.target.value);\n    } else {\n      clearFilter();\n    }\n  }; // ⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆\n\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: text,\n    type: \"text\",\n    placeholder: \"Filter Contacts...\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default ContactFilter;","map":{"version":3,"sources":["/Users/chentianming/Desktop/contact-keeper/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","contactContext","filterContacts","clearFilter","filtered","text","current","value","onChange","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,cAAc,GAAGL,UAAU,CAACG,cAAD,CAAjC;AAD0B,QAGlBG,cAHkB,GAGwBD,cAHxB,CAGlBC,cAHkB;AAAA,QAGFC,WAHE,GAGwBF,cAHxB,CAGFE,WAHE;AAAA,QAGWC,QAHX,GAGwBH,cAHxB,CAGWG,QAHX,EAK1B;;AAEA,QAAMC,IAAI,GAAGR,MAAM,CAAC,EAAD,CAAnB,CAP0B,CAOD;;AAEzBC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,QAAQ,KAAK,IAAjB,EAAuB;AACrBC,MAAAA,IAAI,CAACC,OAAL,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF,GAJQ,CAAT;;AAMA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB,QAAIJ,IAAI,CAACC,OAAL,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC7B;AACAL,MAAAA,cAAc,CAACO,CAAC,CAACC,MAAF,CAASH,KAAV,CAAd;AACD,KAHD,MAGO;AACLJ,MAAAA,WAAW;AACZ;AACF,GAPD,CAf0B,CAuB1B;;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEE,IADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,oBAHd;AAIE,IAAA,QAAQ,EAAEG,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAnCD;;AAqCA,eAAeR,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\nimport ContactContext from '../../context/contact/ContactContext';\n\nconst ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { filterContacts, clearFilter, filtered } = contactContext;\n\n  // ⬇以下内容完全没有必要，可以用setState来代替⬇\n\n  const text = useRef(''); // to catch the current element in the real DOM\n\n  useEffect(() => {\n    if (filtered === null) {\n      text.current.value = '';\n    }\n  });\n\n  const onChange = e => {\n    if (text.current.value !== '') {\n      // value或其他attribute即使没有定义，也会自动生成\n      filterContacts(e.target.value);\n    } else {\n      clearFilter();\n    }\n  };\n  // ⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆\n\n  return (\n    <form>\n      <input\n        ref={text}\n        type='text'\n        placeholder='Filter Contacts...'\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\nexport default ContactFilter;\n"]},"metadata":{},"sourceType":"module"}