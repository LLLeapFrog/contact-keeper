{"ast":null,"code":"import _slicedToArray from \"/Users/chentianming/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chentianming/Desktop/contact-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './ContactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'JJ',\n      email: 'jj@gmail.com',\n      phone: '111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'SW',\n      email: 's@gmail.com',\n      phone: '222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'HW',\n      email: 'h@gmail.com',\n      phone: '333',\n      type: 'professional'\n    }],\n    current: null,\n    filtered: null\n  }; // useReducer参数顺序不能颠倒\n  // p1: 所使用的reducer  p2: 初始值\n  // 第一个返回state(其实就是p2的值), 第二个返回dispatch（一个分发函数指向contactReducer, 默认第一个参数为state）\n\n  const _useReducer = useReducer(contactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Add Contact\n\n\n  const addContact = contact => {\n    contact.id = uuid.v4(); // dispatch an action. Here, action is an object\n\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: FILTER_CONTACTS\n    });\n  };\n\n  return (// state为component提供context, component调用context（object value）里的properties\n    React.createElement(ContactContext.Provider, {\n      value: {\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, props.children)\n  );\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/chentianming/Desktop/contact-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","v4","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './ContactContext';\nimport contactReducer from './contactReducer';\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER\n} from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [\n      {\n        id: 1,\n        name: 'JJ',\n        email: 'jj@gmail.com',\n        phone: '111',\n        type: 'personal'\n      },\n      {\n        id: 2,\n        name: 'SW',\n        email: 's@gmail.com',\n        phone: '222',\n        type: 'personal'\n      },\n      {\n        id: 3,\n        name: 'HW',\n        email: 'h@gmail.com',\n        phone: '333',\n        type: 'professional'\n      }\n    ],\n    current: null,\n    filtered: null\n  };\n\n  // useReducer参数顺序不能颠倒\n  // p1: 所使用的reducer  p2: 初始值\n  // 第一个返回state(其实就是p2的值), 第二个返回dispatch（一个分发函数指向contactReducer, 默认第一个参数为state）\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Add Contact\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    // dispatch an action. Here, action is an object\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n\n  // Delete Contact\n  const deleteContact = id => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n\n  // Set Current Contact\n  const setCurrent = contact => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear Current Contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Update Contact\n  const updateContact = contact => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n\n  // Filter Contacts\n  const filterContacts = text => {\n    dispatch({ type: FILTER_CONTACTS, payload: text });\n  };\n\n  // Clear Filter\n  const clearFilter = () => {\n    dispatch({ type: FILTER_CONTACTS });\n  };\n\n  return (\n    // state为component提供context, component调用context（object value）里的properties\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}