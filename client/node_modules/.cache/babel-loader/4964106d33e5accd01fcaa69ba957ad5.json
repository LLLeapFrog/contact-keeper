{"ast":null,"code":"import _objectSpread from \"/Users/chentianming/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/chentianming/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chentianming/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/ContactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n  const addContact = contactContext.addContact,\n        updateContact = contactContext.updateContact,\n        clearCurrent = contactContext.clearCurrent,\n        current = contactContext.current; // The Hook mimics componentDidMount\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [current]); //虽然 React 在 DOM 渲染时会 diff 内容，只对改变部分进行修改，而不是整体替换，但却做不到对 Effect 的增量修改识别。因此需要开发者通过 useEffect 的第二个参数告诉 React 用到了哪些外部变量\n  // useState和ContactState没有关系，要用也是用ContactFromState.js\n  // 这步用来初始化contact这个object对象\n\n  const _useState = useState({\n    // initial values of contact form\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const clearAll = () => {\n    clearCurrent();\n  }; // 将contact object内的具体key value pair拿出来\n\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type;\n\n  const onChange = e => // setXXXX has to change each property.\n  // setXXXX directly make a new JSON data, So cannot to assign sth like name = value.\n  setContact(_objectSpread({}, contact, {\n    // following dynamically overwrites the value of a certain key.\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addContact(contact);\n    } else {} // context需要接受一个返回值\n\n\n    addContact(contact);\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal'\n    });\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, current ? 'Edit Contact' : 'Add Contact'), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), ' ', \"Personal\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), ' ', \"Professional\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: current ? 'Update Contact' : 'Add Contact',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Clear\")));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/chentianming/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","updateContact","clearCurrent","current","setContact","name","email","phone","type","contact","clearAll","onChange","e","target","value","onSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,cAAc,GAAGJ,UAAU,CAACE,cAAD,CAAjC;AADwB,QAGhBG,UAHgB,GAGqCD,cAHrC,CAGhBC,UAHgB;AAAA,QAGJC,aAHI,GAGqCF,cAHrC,CAGJE,aAHI;AAAA,QAGWC,YAHX,GAGqCH,cAHrC,CAGWG,YAHX;AAAA,QAGyBC,OAHzB,GAGqCJ,cAHrC,CAGyBI,OAHzB,EAKxB;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,OAAO,KAAK,IAAhB,EAAsB;AACpBC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KAFD,MAEO;AACLC,MAAAA,UAAU,CAAC;AACTC,QAAAA,IAAI,EAAE,EADG;AAETC,QAAAA,KAAK,EAAE,EAFE;AAGTC,QAAAA,KAAK,EAAE,EAHE;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAD,CAAV;AAMD;AACF,GAXQ,EAWN,CAACL,OAAD,CAXM,CAAT,CANwB,CAiBT;AACf;AACA;;AAnBwB,oBAoBMT,QAAQ,CAAC;AACrC;AACAW,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,KAAK,EAAE,EAH8B;AAIrCC,IAAAA,KAAK,EAAE,EAJ8B;AAKrCC,IAAAA,IAAI,EAAE;AAL+B,GAAD,CApBd;AAAA;AAAA,QAoBjBC,OApBiB;AAAA,QAoBRL,UApBQ;;AA4BxB,QAAMM,QAAQ,GAAG,MAAM;AACrBR,IAAAA,YAAY;AACb,GAFD,CA5BwB,CAgCxB;;;AAhCwB,QAiChBG,IAjCgB,GAiCaI,OAjCb,CAiChBJ,IAjCgB;AAAA,QAiCVC,KAjCU,GAiCaG,OAjCb,CAiCVH,KAjCU;AAAA,QAiCHC,KAjCG,GAiCaE,OAjCb,CAiCHF,KAjCG;AAAA,QAiCIC,IAjCJ,GAiCaC,OAjCb,CAiCID,IAjCJ;;AAmCxB,QAAMG,QAAQ,GAAGC,CAAC,IAChB;AACA;AACAR,EAAAA,UAAU,mBAELK,OAFK;AAGR;AACA,KAACG,CAAC,CAACC,MAAF,CAASR,IAAV,GAAiBO,CAAC,CAACC,MAAF,CAASC;AAJlB,KAHZ;;AAUA,QAAMC,QAAQ,GAAGH,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIb,OAAO,KAAK,IAAhB,EAAsB;AACpBH,MAAAA,UAAU,CAACS,OAAD,CAAV;AACD,KAFD,MAEO,CACN,CALmB,CAMpB;;;AACAT,IAAAA,UAAU,CAACS,OAAD,CAAV;AACAL,IAAAA,UAAU,CAAC;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAD,CAAV;AAMD,GAdD;;AAeA,SACE;AAAM,IAAA,QAAQ,EAAEO,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,OAAO,GAAG,cAAH,GAAoB,aAD9B,CADF,EAIE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,MAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEE,IAJT;AAKE,IAAA,QAAQ,EAAEM,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAWE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEL,KAJT;AAKE,IAAA,QAAQ,EAAEK,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAkBE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAEJ,KAJT;AAKE,IAAA,QAAQ,EAAEI,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF,EA0BE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,UAHR;AAIE,IAAA,OAAO,EAAEH,IAAI,KAAK,UAJpB;AAKE,IAAA,QAAQ,EAAEG,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,EAgCK,GAhCL,cAiCW,GAjCX,EAkCE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,cAHR;AAIE,IAAA,OAAO,EAAEH,IAAI,KAAK,cAJpB;AAKE,IAAA,QAAQ,EAAEG,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,EAwCK,GAxCL,kBA0CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAER,OAAO,GAAG,gBAAH,GAAsB,aAFtC;AAGE,IAAA,SAAS,EAAC,2BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1CF,EAiDGA,OAAO,IACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAA4C,IAAA,OAAO,EAAEO,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAlDJ,CADF;AA2DD,CAvHD;;AAyHA,eAAeZ,WAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport ContactContext from '../../context/contact/ContactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { addContact, updateContact, clearCurrent, current } = contactContext;\n\n  // The Hook mimics componentDidMount\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal'\n      });\n    }\n  }, [current]); //虽然 React 在 DOM 渲染时会 diff 内容，只对改变部分进行修改，而不是整体替换，但却做不到对 Effect 的增量修改识别。因此需要开发者通过 useEffect 的第二个参数告诉 React 用到了哪些外部变量\n  // useState和ContactState没有关系，要用也是用ContactFromState.js\n  // 这步用来初始化contact这个object对象\n  const [contact, setContact] = useState({\n    // initial values of contact form\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  // 将contact object内的具体key value pair拿出来\n  const { name, email, phone, type } = contact;\n\n  const onChange = e =>\n    // setXXXX has to change each property.\n    // setXXXX directly make a new JSON data, So cannot to assign sth like name = value.\n    setContact({\n      // '...contact' get (paste) all properties of the object.\n      ...contact,\n      // following dynamically overwrites the value of a certain key.\n      [e.target.name]: e.target.value\n    });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (current === null) {\n      addContact(contact);\n    } else {\n    }\n    // context需要接受一个返回值\n    addContact(contact);\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal'\n    });\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primart'>\n        {current ? 'Edit Contact' : 'Add Contact'}\n      </h2>\n      <input\n        type='text'\n        placeholder='Name'\n        name='name'\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type='email'\n        placeholder='Email'\n        name='email'\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        placeholder='Phone'\n        name='phone'\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        checked={type === 'personal'}\n        onChange={onChange}\n      />{' '}\n      Personal{' '}\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        checked={type === 'professional'}\n        onChange={onChange}\n      />{' '}\n      Professional\n      <div>\n        <input\n          type='submit'\n          value={current ? 'Update Contact' : 'Add Contact'}\n          className='btn btn-primary btn-block'\n        />\n      </div>\n      {current && (\n        <div>\n          <button className='btn btn-light btn-block' onClick={clearAll}>\n            Clear\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}