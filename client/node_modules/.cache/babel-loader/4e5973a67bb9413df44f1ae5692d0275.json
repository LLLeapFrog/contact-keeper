{"ast":null,"code":"import _objectSpread from \"/Users/chentianming/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/chentianming/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chentianming/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js\";\nimport React, { useState, useContext } from 'react';\nimport ContactContext from '../../context/contact/ContactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext); // useState和ContactState没有关系，要用也是用ContactFromState.js\n  // 这步用来初始化contact这个object对象\n\n  const _useState = useState({\n    // initial values of contact form\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1]; // 将contact object内的具体key value pair拿出来\n\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type;\n\n  const onChange = e => setContact(_objectSpread({}, contact, {\n    // following dynamically change the value of certain key.\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    contactContext.addContact(contact);\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal'\n    });\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primart\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Add Contact\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), ' ', \"Personal\", ' ', React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), ' ', \"Professional\", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Add Contact\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/chentianming/Desktop/contact-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useState","useContext","ContactContext","ContactForm","contactContext","name","email","phone","type","contact","setContact","onChange","e","target","value","onSubmit","preventDefault","addContact"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport ContactContext from '../../context/contact/ContactContext';\n\nconst ContactForm = () => {\n  const contactContext = useContext(ContactContext);\n\n  // useState和ContactState没有关系，要用也是用ContactFromState.js\n  // 这步用来初始化contact这个object对象\n  const [contact, setContact] = useState({\n    // initial values of contact form\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  });\n\n  // 将contact object内的具体key value pair拿出来\n  const { name, email, phone, type } = contact;\n\n  const onChange = e =>\n    setContact({\n      // '...contact' get (paste) all properties of the object.\n      ...contact,\n      // following dynamically change the value of certain key.\n      [e.target.name]: e.target.value\n    });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    contactContext.addContact(contact);\n    setContact({\n      name: '',\n      email: '',\n      phone: '',\n      type: 'personal'\n    });\n  };\n  return (\n    <form onSubmit={onSubmit}>\n      <h2 className='text-primart'>Add Contact</h2>\n      <input\n        type='text'\n        placeholder='Name'\n        name='name'\n        value={name}\n        onChange={onChange}\n      />\n      <input\n        type='email'\n        placeholder='Email'\n        name='email'\n        value={email}\n        onChange={onChange}\n      />\n      <input\n        type='text'\n        placeholder='Phone'\n        name='phone'\n        value={phone}\n        onChange={onChange}\n      />\n      <h5>Contact Type</h5>\n      <input\n        type='radio'\n        name='type'\n        value='personal'\n        checked={type === 'personal'}\n        onChange={onChange}\n      />{' '}\n      Personal{' '}\n      <input\n        type='radio'\n        name='type'\n        value='professional'\n        checked={type === 'professional'}\n        onChange={onChange}\n      />{' '}\n      Professional\n      <div>\n        <input\n          type='submit'\n          value='Add Contact'\n          className='btn btn-primary btn-block'\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}