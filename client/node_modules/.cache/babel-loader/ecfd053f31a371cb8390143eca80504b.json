{"ast":null,"code":"import _slicedToArray from \"/Users/chentianming/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chentianming/Desktop/contact-keeper/client/src/context/alert/AlertState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport AlertContext from './AlertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = []; // useReducer参数顺序不能颠倒\n  // p1: 所使用的reducer  p2: 初始值\n  // 第一个返回state(其实就是p2的值), 第二个返回dispatch（一个分发函数指向contactReducer, 默认第一个参数为state）\n\n  const _useReducer = useReducer(alertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Set Alert\n\n\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: id\n    }), timeout);\n  };\n\n  return (// state为component提供context, component调用context（object value）里的properties\n    React.createElement(AlertContext.Provider, {\n      value: {\n        alerts: state,\n        setAlert\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, props.children)\n  );\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/Users/chentianming/Desktop/contact-keeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","uuid","AlertContext","alertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","v4","payload","setTimeout","alerts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAMC,YAAY,GAAG,EAArB,CAD0B,CAG1B;AACA;AACA;;AAL0B,sBAMAR,UAAU,CAACG,YAAD,EAAeK,YAAf,CANV;AAAA;AAAA,QAMnBC,KANmB;AAAA,QAMZC,QANY,oBAQ1B;;;AACA,QAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,IAAtB,KAA+B;AAC9C,UAAMC,EAAE,GAAGd,IAAI,CAACe,EAAL,EAAX;AACAN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAET,SADC;AAEPa,MAAAA,OAAO,EAAE;AAAEL,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAaE,QAAAA;AAAb;AAFF,KAAD,CAAR;AAKAG,IAAAA,UAAU,CACR,MACER,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,YADC;AAEPY,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAFF,EAMRD,OANQ,CAAV;AAQD,GAfD;;AAiBA,SACE;AACA,wBAAC,YAAD,CAAc,QAAd;AACE,MAAA,KAAK,EAAE;AACLK,QAAAA,MAAM,EAAEV,KADH;AAELE,QAAAA;AAFK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGJ,KAAK,CAACa,QANT;AAFF;AAWD,CArCD;;AAuCA,eAAed,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport AlertContext from './AlertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  // useReducer参数顺序不能颠倒\n  // p1: 所使用的reducer  p2: 初始值\n  // 第一个返回state(其实就是p2的值), 第二个返回dispatch（一个分发函数指向contactReducer, 默认第一个参数为state）\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  // Set Alert\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type, id }\n    });\n\n    setTimeout(\n      () =>\n        dispatch({\n          type: REMOVE_ALERT,\n          payload: id\n        }),\n      timeout\n    );\n  };\n\n  return (\n    // state为component提供context, component调用context（object value）里的properties\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert\n      }}\n    >\n      {props.children}\n    </AlertContext.Provider>\n  );\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}